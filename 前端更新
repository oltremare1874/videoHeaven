-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 1.Share功能
## 涉及到的文件：Video.vue
<script lang='ts' setup>  
  // 这里是消息弹窗  
  const open_window = () => {  
  console.log('test')  
  ElMessageBox.alert('分享成功！', '操作提示', {  
    // if you want to disable its autofocus  
    // autofocus: false,  
    confirmButtonText: 'OK',  
    callback: (action: Action) => {  
      ElMessage({  
        type: 'info',  
        message: `action: ${action}`,  
      })  
    },  
  })  
}

const share_text = ref('') // 这是分享框里面的内容，具体怎么调用具体分析

const dialogVisible_share = ref(true) // 这是关于分享对话框的
</script>

<template>
  // 这里是HTML中关于分享的设置
   <el-button class="share-button" :icon="Share" type="success" round @click="dialogVisible_share=true" size="large" />
  <el-dialog
    v-model="dialogVisible_share"
    title="分享提示"
    width="400"
    :before-close="handleClose"
  >
    <span>分享内容：<el-input v-model="share_text" style="width: 240px" autosize placeholder="输入你对视频的感想吧！"  /></span>
    <template #footer>
      <div class="dialog-footer">
        <el-button @click="open_window(); dialogVisible_share = false" type="success">确定</el-button>
        <el-button type="danger" @click="dialogVisible_share = false">
          我再想想
        </el-button>
      </div>
    </template>
  </el-dialog>
</template>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#2.首页滑动功能
## 涉及到的文件：App.vue
<template>
  <RouterView v-slot="{ Component }" >
        <transition name="fade">
            <component :is="Component" />
        </transition>
  </RouterView>
</template>

<style scoped>
  html,
body,
#app,
.box {
  margin: 0 auto;
  width: 50%;
  height: 100%;
  background: bisque;
}
.fade-enter-from{   /* 进入时的透明度为0 和 刚开始进入时的原始位置通过active透明度渐渐变为1 */  
  opacity: 0;
  transform: translateX(-100%);
}
 
.fade-enter-to{   /*定义进入完成后的位置 和 透明度 */
  transform: translateX(0%);
  opacity: 1; 
}
 
.fade-enter-active {
    transition: all 0.5s ease-out;
}
 
.fade-leave-from { /* 页面离开时一开始的css样式,离开后为leave-to，经过active渐渐透明 */
  transform: translateX(0%);
  opacity: 0;
}
 
.fade-leave-to{   /* 这个是离开后的透明度通过下面的active阶段渐渐变为0 */  
  transform: translateX(100%);
  opacity: 0;
}
<style> 

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#3.首页container布局微调
## 涉及到的文件：Narbar.vue
<style scoped>
    .mb-2{
    font-size: 10px;
  }
</style>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
